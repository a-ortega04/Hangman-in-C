#include "stdio.h"
#include "stdlib.h"
#include "string.h"

#define CHANCE 6

//Funciones
void printBody(int numeroVidas, char* body) {
	printf("\tNumero de Vidas :%d\n", numeroVidas);
	switch(numeroVidas) {

		case 0: body[6] = '\\'; break;
		case 1: body[5] = '/'; break;
		case 2: body[4] = '\\'; break;
		case 3: body[3] = '|'; break;
		case 4: body[2] = '/'; break;
		case 5: body[1] = ')', body[0] = '('; break;
		default: break;

	}

	printf("\t _________\n"
	       "\t|         |\n"
	       "\t|        %c %c\n"
	       "\t|        %c%c%c\n"
	       "\t|        %c %c\n"
	       "\t|             \n"
	       "\t|           \n", body[0], body[1], body[2],
	       body[3], body[4], body[5], body[6]);
}
void reglas (){
        printf("Ahorcado!!!!!!!!!!!\n");
        printf("Reglas: \n");
        printf("6 vidas.\n");
        printf("Utiliza minusculas solamente.\n");
        printf("Ejemplo : a, b, e, z, etc... \n");
        printf("escribe 'salir' para terminar el juego");
    return 0;
}

int main() {
    //Banco de palabras
    char palabras[][14] = {
        "rojo",
        "control",
        "evolucion",
        "panorama",
        "indirecto",
        "manzana",
        "ventilador",
        "cobija",
        "pizza",
        "contrato",
        "television",
        "basketball",
        "baseball",
        "triangulo"
    };
    //Random Generator
    srand(time(NULL));
    //variables y arreglos
    int randomIndex = rand() % 14;
    int numeroVidas = 6;
    int correcto = 0;
    int excorrecto = 0;
    int numeroDeRepeticion = 0;
    int quit = 0;
    int i = 0;
    char letraAdivinada;
    char *body = malloc(CHANCE+1);
    char adivinado[12];
    char guess[16];

    int lenghtOfWord = strlen(palabras[randomIndex]);

    int letterGuessed[12] = { 0,0,0,0,0,0,0,0,0,0,0,0 };
    //Herramienta de debug
    printf("------guessWords:%s randomIndex: %d lenghtOfWord: %d\n", //DEBUG, deshabilitar al final
        palabras[randomIndex],
        randomIndex,
        lenghtOfWord);
    //Invocacion de funciones
    reglas ();
	printBody(numeroVidas, body);
    //Logica del juego
        while ( correcto < lenghtOfWord ) {
            printf("\n");
            for(numeroDeRepeticion = 0; numeroDeRepeticion < lenghtOfWord; numeroDeRepeticion++) {
                if(letterGuessed[numeroDeRepeticion] == 1){
                    printf("%c",palabras[randomIndex][numeroDeRepeticion]);
                }   else {
                        printf(" _ ");
                    }
            }
        printf("\n");
        printf("\ncorrecto hasta ahora: %d\n",correcto);
        printf("Introduce una letra:\n");
        fgets(guess, 16, stdin);

        if( strncmp(guess, "salir", 5) == 0) {
            quit = 1;
            break;
        }

        letraAdivinada = guess[0];

        printf("letra Adivinada:%c\n",letraAdivinada);


        excorrecto = correcto;

        for( numeroDeRepeticion = 0; numeroDeRepeticion < lenghtOfWord; numeroDeRepeticion++) {

                if(letterGuessed[numeroDeRepeticion] == 1){
                    continue;
                }

                if( letraAdivinada == palabras[randomIndex][numeroDeRepeticion] ){
                    letterGuessed[numeroDeRepeticion] = 1;
                    correcto++;
                    printBody(numeroVidas, body);
                }
        }
        for(i = 0 ; i < lenghtOfWord ; i++){
            if( i == numeroDeRepeticion){
                adivinado[i] = letraAdivinada;
            }
        }
        if( excorrecto == correcto) {
            numeroVidas--;
            printf("respusta incorrecta\n");
            printBody(numeroVidas, body);
            if (numeroVidas == 0) {
                break;
            }
        } else {
            printf("\ncorrecto\n");
        }
    }
    if ( quit == 1 ) {
        printf("Decidiste salirte, adios!!\n");
    } else if (numeroVidas == 0){
        printf("\nPerdiste, la palabra era: <%s>\n",palabras[randomIndex]);
    } else {
        printf("Ganaste!!!!!\n");
    }
    return 0;
}



//dibujo del colgado 7/8
//funcion de jugar otra vez (cornito)
//revisar y mejorar conforme revision
